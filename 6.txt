import numpy as np
from bokeh.plotting import figure, show, output_notebook
from bokeh.layouts import gridplot
def local_regression(x0, X, Y, tau):
    x0 = np.r_[1, x0]  
    X = np.c_[np.ones(len(X)), X]  
    xw = X.T * radial_kernel(x0, X, tau)  
    beta = np.linalg.pinv(xw @ X) @ xw @ Y  
    return x0 @ beta 
def radial_kernel(x0, X, tau):
    return np.exp(np.sum((X - x0) ** 2, axis=1) / (-2 * tau * tau))
n = 1000
X = np.linspace(-3, 3, num=n)
Y = np.log(np.abs(X ** 2 - 1) + 0.5)
X += np.random.normal(scale=0.1, size=n)  # Jitter X
domain = np.linspace(-3, 3, num=300)
def plot_lwr(tau):
    prediction = [local_regression(x0, X, Y, tau) for x0 in domain]
    plot = figure(width=400, height=400)
    plot.title.text = 'tau=%g' % tau
    plot.scatter(X, Y, alpha=0.3)
    plot.line(domain, prediction, line_width=2, color='red')
    return plot
output_notebook()
show(gridplot([
    [plot_lwr(10.0), plot_lwr(1.0)],
    [plot_lwr(0.1), plot_lwr(0.01)]
]))