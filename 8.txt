import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import load_breast_cancer
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.metrics import accuracy_score, classification_report,confusion_matrix
import warnings
warnings.filterwarnings('ignore')


cancer = load_breast_cancer()
data = pd.DataFrame(cancer.data, columns=cancer.feature_names)
data['diagnosis'] = cancer.target


data.head()


data.info()


data.isnull().sum()


X = data.drop('diagnosis', axis=1)
y = data['diagnosis']


X_train, X_test, y_train, y_test = train_test_split(X, y,
test_size=0.2, random_state=42)


model = DecisionTreeClassifier(criterion='entropy', random_state=42)
model.fit(X_train, y_train)


y_pred = model.predict(X_test)


accuracy = accuracy_score(y_test, y_pred) * 100
print(f"\nAccuracy: {accuracy:.2f}%")
print("\nClassification Report:\n", classification_report(y_test,y_pred))


plt.figure(figsize=(20, 10))
plot_tree(model, filled=True, feature_names=X.columns,
class_names=['Malignant', 'Benign'])
plt.title("Decision Tree")
plt.show()


new = [[12.5, 19.2, 80.0, 500.0, 0.085, 0.1, 0.05, 0.02, 0.17, 0.06,
0.4, 1.0, 2.5, 40.0, 0.006, 0.02, 0.03, 0.01, 0.02, 0.003,
16.0, 25.0, 105.0, 900.0, 0.13, 0.25, 0.28, 0.12, 0.29, 0.08]]
prediction = model.predict(new)
print("\nPrediction for new sample:", "Benign" if prediction[0] == 1
else "Malignant")